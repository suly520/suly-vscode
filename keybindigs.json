// Place your key bindings in this file to override the defaults
[
    {
        "key": "space r",
        "command": "python.execInTerminal-icon",
        "when": "editorTextFocus && inputFocus && viewContainer.workbench.view.explorer.enabled && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+alt+x",
        "command": "workbench.view.extensions",
        "when": "viewContainer.workbench.view.extensions.enabled"
    },
    {
        "key": "ctrl+shift+x",
        "command": "-workbench.view.extensions",
        "when": "viewContainer.workbench.view.extensions.enabled"
    },
    {
        "key": "ctrl+k n",
        "command": "explorer.newFolder"
    },    
    {   
    	"key": "ctrl+p",
        "command": "extension.vim_ctrl+p",
        "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+p",
        "command": "-extension.vim_ctrl+p",
        "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "space p",
        "command": "workbench.action.quickOpen",
        "when": "editorTextFocus && inputFocus && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "space e",
        "command": "workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled&&editorTextFocus && inputFocus && vim.mode == 'Normal'"
    },
    {
        "key": "l",
        "command": "breadcrumbs.focusNext",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "h",
        "command": "breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "l",
        "command": "list.expand",
        "when": "listFocus && treeElementCanExpand && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasChild && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "space oem_period",
        "command": "breadcrumbs.focusAndSelect",
        "when": "editorTextFocus && inputFocus && vim.mode == 'Normal' && breadcrumbsPossible && breadcrumbsVisible"
    },
    {
        "key": "space q",
        "command": "workbench.action.closeActiveEditor",
        "when": "editorTextFocus && inputFocus && vim.mode == 'Normal'"
    },
    {
        "key": "tab",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "shift+tab",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "shift+tab",
        "command": "extension.vim_shift+tab",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && !inQuickOpen"
    },
    {
        "key": "shift+tab",
        "command": "-extension.vim_shift+tab",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "space tab",
        "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
        "when": "!activeEditorGroupEmpty && !inputFocus && !textInputFocus || editorTextFocus && inputFocus && !activeEditorGroupEmpty && vim.mode != 'Insert' && vim.mode!='CommandlineInProgress'"
    },
    {
        "key": "space i",
        "command": "workbench.panel.chat.view.copilot.focus",
        "when": "editorTextFocus && inputFocus && vim.mode == 'Normal'"
    },
    {
        "key": "j",
        "command": "editor.action.scrollDownHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "k",
        "command": "editor.action.scrollUpHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "up",
        "command": "-editor.action.scrollUpHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "up",
        "command": "editor.action.scrollUpHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "h",
        "command": "editor.action.scrollLeftHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "l",
        "command": "editor.action.scrollRightHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "ctrl+shift+k",
        "command": "editor.action.showHover",
        "when": "editorHoverVisible && textInputFocus"
    },
    {
        "key": "space k",
        "command": "editor.action.showHover",
        "when": "editorHasHoverProvider && editorTextFocus && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "space t",
        "command": "terminal.focus",
        "when": "editorFocus&&vim.mode=='Normal'"
    },
    {
        "key": "ctrl+shift+f",
        "command": "extension.vim_ctrl+f",
        "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+f",
        "command": "-extension.vim_ctrl+f",
        "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+shift+h",
        "command": "extension.vim_ctrl+h",
        "when": "editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"
    },
    {
        "key": "ctrl+h",
        "command": "-extension.vim_ctrl+h",
        "when": "editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"
    }
]